snippet log "console.log"
console.log($1);
endsnippet

snippet deflog "define console.log/info/warn/err"
const log = console.log.bind(console);
const info = console.info.bind(console);
const warn = console.warn.bind(console);
const err = console.error.bind(console);
endsnippet

snippet jit "jest it test"
it('${1:test description}', () => {
  $2
});
endsnippet

snippet vntthen "description"
Vue.nextTick()
  .then(() => {
    $1
  });
endsnippet

snippet im "import xyz from 'xyz'"
import ${1} from '${2:$1}';
endsnippet

snippet imas "import * as xyz from 'xyz'"
import * as ${1} from '${2:$1}';
endsnippet

snippet imm "import { member } from 'xyz'"
import { ${1} } from '${2}';
endsnippet

snippet cla
class ${1} {
  ${0:${VISUAL}}
}
endsnippet

snippet clax
class ${1} extends ${2} {
  ${0:${VISUAL}}
}
endsnippet

snippet clac
class ${1} {
  constructor(${2}) {
    ${0:${VISUAL}}
  }
}
endsnippet

snippet foro "for (const prop of object}) { ... }"
for (const ${1:prop} of ${2:object}) {
  ${0:$1}
}
endsnippet

# Generator
snippet fun*
function* ${1:function_name}(${2}) {
  ${0:${VISUAL}}
}
endsnippet

snippet c=>
const ${1:function_name} = (${2}) => {
  ${0:${VISUAL}}
}
endsnippet

snippet caf
const ${1:function_name} = (${2}) => {
  ${0:${VISUAL}}
}
endsnippet

snippet cl "console.log(...)" b
console.log($0);
endsnippet

snippet clb "bookended console log" b
console.log("<><><>");
console.log($0);
console.log("<><><>");
endsnippet

snippet fun "new function" i
function($1) {$2}
endsnippet

snippet test "test('testname')" !b
test('$1', function(assert) {
	$2
});
endsnippet
