#
# ~/.config/compton.conf
#

# Description
# ===========
#
# This is the `compton` configuration file.  Compton is the display
# compositor used in my custom working environment, centred around
# `bspwm`.  See my dotfiles https://gitlab.com/protesilaos/dotfiles.
#
# To install on Debian, run:
#   sudo apt install compton
#
# See `man compton` on the origin of all technical comments and the
# available options.  Note that multiple options are contingent on
# various pieces of hardware and/or their drivers.  These are known to
# affect performance.  What is included herein has been tested on a
# Lenovo ThinkPad X220 running an up-to-date version of Debian
# Buster/Sid.
#
# Last reviewed on: 2018-11-12

# Backend
# =======

# This is hardware dependent.  On my Lenovo ThinkPad X220, all options
# work.  However, the "xr_glx_hybrid" value seems to be the most
# portable.
backend="glx"; # (xrender|glx|xr_glx_hybrid)

# Xrender backend
# --------------
xrender-sync=true;
xrender-sync-fence=false; # may be needed for nvidia with glx backend

# GLX backend
# -----------
glx-no-stencil=true;
glx-copy-from-front=false;
# glx-use-copysubbuffermesa = false; # overrides `glx-copy-from-front`
glx-no-rebind-pixmap=true; # recommended as "true" if it works with the video driver
glx-swap-method="undefined"; # slowest, but safest
# glx-use-gpushader4=false;

# Shadows
# =======

shadow=true;
shadow-radius=3; # default 12
shadow-offset-x=-3; # left offset, default -15
shadow-offset-y=-3; # top offset, default -15
shadow-opacity=0.8; # default 0.75

shadow-red=0.2 # default 0 = black (1.0 = white)
shadow-green=0.2 # default 0 = black (1.0 = white)
shadow-blue=0.2 # default 0 = black (1.0 = white)

no-dnd-shadow=true; # "dnd" stands for "drag-n-drop"
no-dock-shadow=true; # also applies to panels
clear-shadow=true; # may not work with fully transparent ARGB
shadow-ignore-shaped=true;

# The shadow exclude options are helpful if you have shadows enabled.
# Due to the way compton draws its shadows, certain applications will
# have visual glitches (most applications are fine, only apps that do
# weird things with xshapes or argb are affected).  This list includes
# all the affected apps I found in my testing. The "! name~=''" part
# excludes shadows on any "Unknown" windows, this prevents a visual
# glitch with the XFWM alt tab switcher.
shadow-exclude = [
    ### "! name~=''",
    ### "window_type *= 'menu'",
    ### "_NET_WM_WINDOW_TYPE@:a *= 'MENU'",
    "name *?= 'Plank'",
    "name %= 'Plank'",
    "name ~= 'Plank'",
    "_NET_WM_NAME@:s *?= 'Plank'",
    "_GTK_FRAME_EXTENTS@:c"
];

# Opacity, blur, fading
# =====================

active-opacity=1.0;
frame-opacity=1.0;
menu-opacity=1.0; # default 1.0
inactive-opacity=1.0; # disabled by default
inactive-opacity-override=true;
inactive-dim=1.0 # default 1.0
inactive-dim-fixed=false;

blur-background=false;
blur-background-frame=false;
blur-background-fixed=false;
#### Blur background of transparent windows. Bad performance with X Render
#### backend. GLX backend is preferred.  You may use the accompanied
#### compton-convgen.py to generate blur kernels.
###blur-kern="9x9gaussian"
###blur-background-exclude = [
###    # "window_type = 'dock'",
###    "window_type = 'desktop'"
###];

fading=false;
####no-fading-openclose=false;
####no-fading-destroyed-argb=true; # workaround for bugs in {Open,Flux}box
####fade-delta=60; # default 10 (this is miliseconds)
####fade-in-step = 0.35; # default 0.028
####fade-out-step = 0.35; # default 0.03

# Other options
# =============
# NOTE the comments in this section are either adapted from the manpage
# or copied from the example config shipped with the source.

refresh-rate=0; # let compton figure it out via X RandR
mark-wmwin-focused=true;
mark-ovredir-focused=true;
use-ewmh-active-win=true;
detect-rounded-corners=true;
detect-client-opacity=true;
detect-transient=true;
detect-client-leader=true;

# Set VSync method. VSync methods currently available:
# * none: No VSync
# * drm: VSync with DRM_IOCTL_WAIT_VBLANK. May only work on some drivers.
# * opengl: Try to VSync with SGI_video_sync OpenGL extension. Only work
# on some drivers.
# * opengl-oml: Try to VSync with OML_sync_control OpenGL extension.
# Only work on some drivers.
# * opengl-swc: Try to VSync with SGI_swap_control OpenGL extension.
# Only work on some drivers. Works only with GLX backend. Known to be
# most effective on many drivers. Does not actually control paint
# timing, only buffer swap is affected, so it doesn't have the effect of
# --sw-opti unlike other methods. Experimental.
# * opengl-mswc: Try to VSync with MESA_swap_control OpenGL extension.
# Basically the same as opengl-swc above, except the extension we use.
# (Note some VSync methods may not be enabled at compile time.)
vsync="opengl";

# Enable DBE painting mode, intended to use with VSync to (hopefully)
# eliminate tearing.  Reported to have no effect, though.
dbe=false;
# Painting on X Composite overlay window. Recommended.
paint-on-overlay=true;

# Limit compton to repaint at most once every 1 / refresh_rate second to
# boost performance.  This should not be used with --vsync
# drm/opengl/opengl-oml as they essentially does --sw-opti's job
# already, unless you wish to specify a lower refresh rate than the
# actual value.
sw-opti=false;

# Unredirect all windows if a full-screen opaque window is detected, to
# maximize performance for full-screen windows, like games.  Known to
# cause flickering when redirecting/unredirecting windows.
# paint-on-overlay may make the flickering less obvious.
unredir-if-possible=true;

# Window type settings
# ============================

wintypes:
{
    tooltip =
    {
        # fade: Fade the particular type of windows.
        fade=false;
        # shadow: Give those windows shadow
        shadow=true;
        # opacity: Default opacity for the type of windows.
        opacity=1;
        # focus: Whether to always consider windows of this type focused.
        focus=false;
    };
};
