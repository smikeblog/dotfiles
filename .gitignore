moc_cache
__pycache__/
*.py[cod]
*$py.class


# Compiled source #
###################
*.com
*.class
*.dll
*.exe
*.o
*.so

# Packages #
############
# it's better to unpack these files and commit the raw source
# git has its own built in compression methods
*.7z
*.dmg
*.gz
*.iso
*.jar
*.rar
*.tar
*.zip

# Logs and databases #
######################
*.log
*.sql
*.sqlite
*.uuid

# OS generated files #
######################
.DS_Store
.DS_Store?
*.swp
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# IDE files #
#############
viminfo
vifm/vifminfo
vifm/vifminfo.json
nbproject
.~lock.*
.buildpath
.idea
.project
.settings
composer.lock

# Created by https://www.gitignore.io/api/sublimetext
# Edit at https://www.gitignore.io/?templates=sublimetext

### SublimeText ###
# Cache files for Sublime Text
*.tmlanguage.cache
*.tmPreferences.cache
*.stTheme.cache

# Workspace files are user-specific
*.sublime-workspace

# Project files should be checked into the repository, unless a significant
# proportion of contributors will probably not be using Sublime Text
# *.sublime-project

# SFTP configuration file
sftp-config.json

# Package control specific files
Package Control.last-run
Package Control.ca-list
Package Control.ca-bundle
Package Control.system-ca-bundle
Package Control.cache/
Package Control.ca-certs/
Package Control.merged-ca-bundle
Package Control.user-ca-bundle
oscrypto-ca-bundle.crt
bh_unicode_properties.cache

# Sublime-github package stores a github token in this file
# https://packagecontrol.io/packages/sublime-github
GitHub.sublime-settings

# End of https://www.gitignore.io/api/sublimetext
sublime-text-3/Cache/
sublime-text-3/local/
sublime-text-3/Packages/User/

# moc non set files
/moc/last_directory
/moc/equalizer
/moc/softmixer
/moc/pid
/moc/playlist.m3u

